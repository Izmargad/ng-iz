{"ast":null,"code":"\"use strict\";\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.define-property.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.string.replace.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.regexp.exec.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.parse-int.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.slice.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.string.pad-start.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.to-string.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.date.to-string.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildTimeValue = buildTimeValue;\n\nfunction buildTimeValue(value) {\n  var onlyDigitsValue = value.replace(/\\D/g, '');\n\n  if (onlyDigitsValue.length < 2) {\n    return value;\n  }\n\n  var firstDigit = parseInt(onlyDigitsValue[0], 10);\n  var secondDigit = parseInt(onlyDigitsValue[1], 10);\n\n  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {\n    var index;\n\n    if (firstDigit >= 3) {\n      index = 1;\n    } else {\n      index = 2;\n    }\n\n    return build(onlyDigitsValue, index);\n  }\n\n  if (value.length === 2) {\n    return value;\n  }\n\n  return build(onlyDigitsValue, 2);\n}\n\nfunction build(onlyDigitsValue, index) {\n  var hours = onlyDigitsValue.slice(0, index);\n  var validHours = Math.min(parseInt(hours, 10), 23);\n  var minuteCharacters = onlyDigitsValue.slice(index);\n  var parsedMinutes = parseInt(minuteCharacters, 10);\n  var validMinutes = Math.min(parsedMinutes, 59);\n  return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;EAC3CG,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,cAARF,GAAyBE,cAAzBF;;AAEA,SAASE,cAAT,CAAwBD,KAAxB,EAA+B;EAC7B,IAAME,eAAe,GAAGF,KAAK,CAACG,OAANH,CAAc,KAAdA,EAAqB,EAArBA,CAAxB;;EAEA,IAAIE,eAAe,CAACE,MAAhBF,GAAyB,CAA7B,EAAgC;IAC9B,OAAOF,KAAP;EACD;;EAED,IAAMK,UAAU,GAAGC,QAAQ,CAACJ,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAA3B;EACA,IAAMK,WAAW,GAAGD,QAAQ,CAACJ,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAA5B;;EAEA,IAAIG,UAAU,IAAI,CAAdA,IAAmBA,UAAU,KAAK,CAAfA,IAAoBE,WAAW,IAAI,CAA1D,EAA6D;IAC3D,IAAIC,KAAJ;;IAEA,IAAIH,UAAU,IAAI,CAAlB,EAAqB;MACnBG,KAAK,GAAG,CAARA;IADF,OAEO;MACLA,KAAK,GAAG,CAARA;IACD;;IAED,OAAOC,KAAK,CAACP,eAAD,EAAkBM,KAAlB,CAAZ;EACD;;EAED,IAAIR,KAAK,CAACI,MAANJ,KAAiB,CAArB,EAAwB;IACtB,OAAOA,KAAP;EACD;;EAED,OAAOS,KAAK,CAACP,eAAD,EAAkB,CAAlB,CAAZ;AACD;;AAED,SAASO,KAAT,CAAeP,eAAf,EAAgCM,KAAhC,EAAuC;EACrC,IAAME,KAAK,GAAGR,eAAe,CAACS,KAAhBT,CAAsB,CAAtBA,EAAyBM,KAAzBN,CAAd;EACA,IAAMU,UAAU,GAAGC,IAAI,CAACC,GAALD,CAASP,QAAQ,CAACI,KAAD,EAAQ,EAAR,CAAjBG,EAA8B,EAA9BA,CAAnB;EACA,IAAME,gBAAgB,GAAGb,eAAe,CAACS,KAAhBT,CAAsBM,KAAtBN,CAAzB;EACA,IAAMc,aAAa,GAAGV,QAAQ,CAACS,gBAAD,EAAmB,EAAnB,CAA9B;EACA,IAAME,YAAY,GAAGJ,IAAI,CAACC,GAALD,CAASG,aAATH,EAAwB,EAAxBA,CAArB;EACA,OAAQ,GAAED,UAAU,CAACM,QAAXN,GAAsBO,QAAtBP,CAA+B,CAA/BA,EAAkC,GAAlCA,CAAuC,IAAGK,YAAY,CAACC,QAAbD,GAAwBE,QAAxBF,CAAiC,CAAjCA,EAAoC,GAApCA,CAAyC,EAA7F;AACD","names":["Object","defineProperty","exports","value","buildTimeValue","onlyDigitsValue","replace","length","firstDigit","parseInt","secondDigit","index","build","hours","slice","validHours","Math","min","minuteCharacters","parsedMinutes","validMinutes","toString","padStart"],"sources":["/Users/ilze/Documents/git/ng-iz/node_modules/@testing-library/user-event/dist/utils/edit/buildTimeValue.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildTimeValue = buildTimeValue;\n\nfunction buildTimeValue(value) {\n  const onlyDigitsValue = value.replace(/\\D/g, '');\n\n  if (onlyDigitsValue.length < 2) {\n    return value;\n  }\n\n  const firstDigit = parseInt(onlyDigitsValue[0], 10);\n  const secondDigit = parseInt(onlyDigitsValue[1], 10);\n\n  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {\n    let index;\n\n    if (firstDigit >= 3) {\n      index = 1;\n    } else {\n      index = 2;\n    }\n\n    return build(onlyDigitsValue, index);\n  }\n\n  if (value.length === 2) {\n    return value;\n  }\n\n  return build(onlyDigitsValue, 2);\n}\n\nfunction build(onlyDigitsValue, index) {\n  const hours = onlyDigitsValue.slice(0, index);\n  const validHours = Math.min(parseInt(hours, 10), 23);\n  const minuteCharacters = onlyDigitsValue.slice(index);\n  const parsedMinutes = parseInt(minuteCharacters, 10);\n  const validMinutes = Math.min(parsedMinutes, 59);\n  return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;\n}"]},"metadata":{},"sourceType":"script"}