{"ast":null,"code":"\"use strict\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.define-property.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.find.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.entries.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.assign.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.is-array.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.symbol.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.symbol.description.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.to-string.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.string.iterator.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.iterator.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.slice.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.function.name.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.from.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMouseEventOptions = getMouseEventOptions;\n\nfunction isMousePressEvent(event) {\n  return event === 'mousedown' || event === 'mouseup' || event === 'click' || event === 'dblclick';\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\n\nvar BUTTONS_NAMES = {\n  none: 0,\n  primary: 1,\n  secondary: 2,\n  auxiliary: 4\n}; // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\nvar BUTTON_NAMES = {\n  primary: 0,\n  auxiliary: 1,\n  secondary: 2\n};\n\nfunction translateButtonNumber(value, from) {\n  var _Object$entries$find;\n\n  var _ref = from === 'button' ? [BUTTON_NAMES, BUTTONS_NAMES] : [BUTTONS_NAMES, BUTTON_NAMES],\n      _ref2 = _slicedToArray(_ref, 2),\n      mapIn = _ref2[0],\n      mapOut = _ref2[1];\n\n  var name = (_Object$entries$find = Object.entries(mapIn).find(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        i = _ref4[1];\n\n    return i === value;\n  })) == null ? void 0 : _Object$entries$find[0]; // istanbul ignore next\n\n  return name && Object.prototype.hasOwnProperty.call(mapOut, name) ? mapOut[name] : 0;\n}\n\nfunction convertMouseButtons(event, init, property) {\n  if (!isMousePressEvent(event)) {\n    return 0;\n  }\n\n  if (typeof init[property] === 'number') {\n    return init[property];\n  } else if (property === 'button' && typeof init.buttons === 'number') {\n    return translateButtonNumber(init.buttons, 'buttons');\n  } else if (property === 'buttons' && typeof init.button === 'number') {\n    return translateButtonNumber(init.button, 'button');\n  }\n\n  return property != 'button' && isMousePressEvent(event) ? 1 : 0;\n}\n\nfunction getMouseEventOptions(event, init) {\n  var clickCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  var _init;\n\n  init = (_init = init) != null ? _init : {};\n  return Object.assign({}, init, {\n    // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n    detail: event === 'mousedown' || event === 'mouseup' || event === 'click' ? 1 + clickCount : clickCount,\n    buttons: convertMouseButtons(event, init, 'buttons'),\n    button: convertMouseButtons(event, init, 'button')\n  });\n}","map":{"version":3,"mappings":"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","names":["Object","defineProperty","exports","value","getMouseEventOptions","isMousePressEvent","event","BUTTONS_NAMES","none","primary","secondary","auxiliary","BUTTON_NAMES","translateButtonNumber","from","_Object$entries$find","mapIn","mapOut","name","entries","find","i","prototype","hasOwnProperty","call","convertMouseButtons","init","property","buttons","button","clickCount","_init","detail"],"sources":["/Users/ilze/Documents/git/ng-iz/node_modules/@testing-library/user-event/dist/utils/click/getMouseEventOptions.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMouseEventOptions = getMouseEventOptions;\n\nfunction isMousePressEvent(event) {\n  return event === 'mousedown' || event === 'mouseup' || event === 'click' || event === 'dblclick';\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\n\nconst BUTTONS_NAMES = {\n  none: 0,\n  primary: 1,\n  secondary: 2,\n  auxiliary: 4\n}; // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\nconst BUTTON_NAMES = {\n  primary: 0,\n  auxiliary: 1,\n  secondary: 2\n};\n\nfunction translateButtonNumber(value, from) {\n  var _Object$entries$find;\n\n  const [mapIn, mapOut] = from === 'button' ? [BUTTON_NAMES, BUTTONS_NAMES] : [BUTTONS_NAMES, BUTTON_NAMES];\n  const name = (_Object$entries$find = Object.entries(mapIn).find(([, i]) => i === value)) == null ? void 0 : _Object$entries$find[0]; // istanbul ignore next\n\n  return name && Object.prototype.hasOwnProperty.call(mapOut, name) ? mapOut[name] : 0;\n}\n\nfunction convertMouseButtons(event, init, property) {\n  if (!isMousePressEvent(event)) {\n    return 0;\n  }\n\n  if (typeof init[property] === 'number') {\n    return init[property];\n  } else if (property === 'button' && typeof init.buttons === 'number') {\n    return translateButtonNumber(init.buttons, 'buttons');\n  } else if (property === 'buttons' && typeof init.button === 'number') {\n    return translateButtonNumber(init.button, 'button');\n  }\n\n  return property != 'button' && isMousePressEvent(event) ? 1 : 0;\n}\n\nfunction getMouseEventOptions(event, init, clickCount = 0) {\n  var _init;\n\n  init = (_init = init) != null ? _init : {};\n  return { ...init,\n    // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n    detail: event === 'mousedown' || event === 'mouseup' || event === 'click' ? 1 + clickCount : clickCount,\n    buttons: convertMouseButtons(event, init, 'buttons'),\n    button: convertMouseButtons(event, init, 'button')\n  };\n}"]},"metadata":{},"sourceType":"script"}