{"ast":null,"code":"\"use strict\";\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.define-property.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keydownBehavior = void 0;\n\nvar _utils = require(\"../../utils\");\n/**\n * This file should contain behavior for arrow keys as described here:\n * https://w3c.github.io/uievents-code/#key-arrowpad-section\n */\n\n\nvar keydownBehavior = [{\n  // TODO: implement for contentEditable\n  matches: function (keyDef, element) {\n    return (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']);\n  },\n  handle: function (keyDef, element) {\n    var _ref;\n\n    var _ref2 = (0, _utils.getSelectionRange)(element),\n        selectionStart = _ref2.selectionStart,\n        selectionEnd = _ref2.selectionEnd;\n\n    var direction = keyDef.key === 'ArrowLeft' ? -1 : 1;\n    var newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart :\n    /* istanbul ignore next */\n    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref :\n    /* istanbul ignore next */\n    0;\n    (0, _utils.setSelectionRange)(element, newPos, newPos);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;","map":{"version":3,"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;EAC3CG,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,eAARF,GAA0B,KAAK,CAA/BA;;AAEA,IAAIG,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;;;AACA,IAAMF,eAAe,GAAG,CAAC;EACvB;EACAG,OAAO,EAAE,UAACC,MAAD,EAASC,OAAT;IAAA,OAAqB,CAACD,MAAM,CAACE,GAAPF,KAAe,WAAfA,IAA8BA,MAAM,CAACE,GAAPF,KAAe,YAA9C,KAA+D,CAAC,GAAGH,MAAM,CAACM,aAAX,EAA0BF,OAA1B,EAAmC,CAAC,OAAD,EAAU,UAAV,CAAnC,CAApF;EAFc;EAGvBG,MAAM,EAAE,UAACJ,MAAD,EAASC,OAAT,EAAqB;IAC3B,IAAII,IAAJ;;IAEA,YAGI,CAAC,GAAGR,MAAM,CAACS,iBAAX,EAA8BL,OAA9B,CAHJ;IAAA,IACEM,cADF,SACEA,cADF;IAAA,IAEEC,YAFF,SAEEA,YAFF;;IAIA,IAAMC,SAAS,GAAGT,MAAM,CAACE,GAAPF,KAAe,WAAfA,GAA6B,CAAC,CAA9BA,GAAkC,CAApD;IACA,IAAMU,MAAM,GAAG,CAACL,IAAI,GAAGE,cAAc,KAAKC,YAAnBD,GAAkC,CAACA,cAAc,IAAI,IAAlBA,GAAyBA,cAAzBA;IAC1D;IACA,CAFyD,IAEpDE,SAFkBF,GAENE,SAAS,GAAG,CAAZA,GAAgBF,cAAhBE,GAAiCD,YAFnC,KAEoD,IAFpD,GAE2DH,IAF3D;IAGf;IACA,CAJA;IAKA,CAAC,GAAGR,MAAM,CAACc,iBAAX,EAA8BV,OAA9B,EAAuCS,MAAvC,EAA+CA,MAA/C;EACD;AAjBsB,CAAD,CAAxB;AAmBAhB,OAAO,CAACE,eAARF,GAA0BE,eAA1BF","names":["Object","defineProperty","exports","value","keydownBehavior","_utils","require","matches","keyDef","element","key","isElementType","handle","_ref","getSelectionRange","selectionStart","selectionEnd","direction","newPos","setSelectionRange"],"sources":["/Users/ilze/Documents/git/ng-iz/node_modules/@testing-library/user-event/dist/keyboard/plugins/arrow.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keydownBehavior = void 0;\n\nvar _utils = require(\"../../utils\");\n\n/**\n * This file should contain behavior for arrow keys as described here:\n * https://w3c.github.io/uievents-code/#key-arrowpad-section\n */\nconst keydownBehavior = [{\n  // TODO: implement for contentEditable\n  matches: (keyDef, element) => (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']),\n  handle: (keyDef, element) => {\n    var _ref;\n\n    const {\n      selectionStart,\n      selectionEnd\n    } = (0, _utils.getSelectionRange)(element);\n    const direction = keyDef.key === 'ArrowLeft' ? -1 : 1;\n    const newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart :\n    /* istanbul ignore next */\n    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref :\n    /* istanbul ignore next */\n    0;\n    (0, _utils.setSelectionRange)(element, newPos, newPos);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;"]},"metadata":{},"sourceType":"script"}