{"ast":null,"code":"\"use strict\";\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.define-property.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/web.timers.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.array.is-array.js\");\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TEXT_NODE = void 0;\nexports.checkContainerType = checkContainerType;\nexports.getDocument = getDocument;\nexports.getWindowFromNode = getWindowFromNode;\nexports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled; // Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\n\nvar TEXT_NODE = 3;\nexports.TEXT_NODE = TEXT_NODE;\n\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (// legacy timers\n      setTimeout._isMockFunction === true || // modern timers\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n\n  return false;\n}\n\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n\n  return window.document;\n}\n\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView === null) {\n    throw new Error(`It looks like the window object is not available for the provided node.`);\n  } else if (node.then instanceof Function) {\n    throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \\`fireEvent.click(screen.findBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`, or await the findBy query \\`fireEvent.click(await screen.findBy...\\`?`);\n  } else if (Array.isArray(node)) {\n    throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \\`fireEvent.click(screen.getAllBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`?`);\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(`It looks like you passed a \\`screen\\` object. Did you do something like \\`fireEvent.click(screen, ...\\` when you meant to use a query, e.g. \\`fireEvent.click(screen.getBy..., \\`?`);\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(`The given node is not an Element, the node type is: ${typeof node}.`);\n  }\n}\n\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);\n  }\n\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n\n    return typeof object;\n  }\n}","map":{"version":3,"mappings":"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","names":["Object","defineProperty","exports","value","TEXT_NODE","checkContainerType","getDocument","getWindowFromNode","jestFakeTimersAreEnabled","jest","setTimeout","_isMockFunction","prototype","hasOwnProperty","call","window","Error","document","node","defaultView","ownerDocument","then","Function","Array","isArray","debug","logTestingPlaygroundURL","container","querySelector","querySelectorAll","TypeError","getTypeName","object","constructor","name"],"sources":["/Users/ilze/Documents/git/ng-iz/node_modules/@testing-library/dom/dist/helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TEXT_NODE = void 0;\nexports.checkContainerType = checkContainerType;\nexports.getDocument = getDocument;\nexports.getWindowFromNode = getWindowFromNode;\nexports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled;\n// Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\nconst TEXT_NODE = 3;\nexports.TEXT_NODE = TEXT_NODE;\n\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (// legacy timers\n      setTimeout._isMockFunction === true || // modern timers\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n\n  return false;\n}\n\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n\n  return window.document;\n}\n\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView === null) {\n    throw new Error(`It looks like the window object is not available for the provided node.`);\n  } else if (node.then instanceof Function) {\n    throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \\`fireEvent.click(screen.findBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`, or await the findBy query \\`fireEvent.click(await screen.findBy...\\`?`);\n  } else if (Array.isArray(node)) {\n    throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \\`fireEvent.click(screen.getAllBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`?`);\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(`It looks like you passed a \\`screen\\` object. Did you do something like \\`fireEvent.click(screen, ...\\` when you meant to use a query, e.g. \\`fireEvent.click(screen.getBy..., \\`?`);\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(`The given node is not an Element, the node type is: ${typeof node}.`);\n  }\n}\n\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);\n  }\n\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n\n    return typeof object;\n  }\n}"]},"metadata":{},"sourceType":"script"}