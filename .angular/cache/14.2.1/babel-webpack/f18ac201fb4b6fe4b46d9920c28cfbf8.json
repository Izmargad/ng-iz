{"ast":null,"code":"\"use strict\";\n\nrequire(\"/Users/ilze/Documents/git/ng-iz/node_modules/core-js/modules/es.object.define-property.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasUnreliableEmptyValue = hasUnreliableEmptyValue;\n\nvar _isElementType = require(\"../misc/isElementType\");\n\nvar unreliableValueInputTypes;\n/**\n * Check if an empty IDL value on the element could mean a derivation of displayed value and IDL value\n */\n\n(function (unreliableValueInputTypes) {\n  unreliableValueInputTypes[\"number\"] = \"number\";\n})(unreliableValueInputTypes || (unreliableValueInputTypes = {}));\n\nfunction hasUnreliableEmptyValue(element) {\n  return (0, _isElementType.isElementType)(element, 'input') && Boolean(unreliableValueInputTypes[element.type]);\n}","map":{"version":3,"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;EAC3CG,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,uBAARF,GAAkCE,uBAAlCF;;AAEA,IAAIG,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AAEA,IAAIC,yBAAJ;AACA;AACA;AACA;;AAEA,CAAC,UAAUA,yBAAV,EAAqC;EACpCA,yBAAyB,CAAC,QAAD,CAAzBA,GAAsC,QAAtCA;AADF,GAEGA,yBAAyB,KAAKA,yBAAyB,GAAG,EAAjC,CAF5B;;AAIA,SAASH,uBAAT,CAAiCI,OAAjC,EAA0C;EACxC,OAAO,CAAC,GAAGH,cAAc,CAACI,aAAnB,EAAkCD,OAAlC,EAA2C,OAA3C,KAAuDE,OAAO,CAACH,yBAAyB,CAACC,OAAO,CAACG,IAAT,CAA1B,CAArE;AACD","names":["Object","defineProperty","exports","value","hasUnreliableEmptyValue","_isElementType","require","unreliableValueInputTypes","element","isElementType","Boolean","type"],"sources":["/Users/ilze/Documents/git/ng-iz/node_modules/@testing-library/user-event/dist/utils/edit/hasUnreliableEmptyValue.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasUnreliableEmptyValue = hasUnreliableEmptyValue;\n\nvar _isElementType = require(\"../misc/isElementType\");\n\nvar unreliableValueInputTypes;\n/**\n * Check if an empty IDL value on the element could mean a derivation of displayed value and IDL value\n */\n\n(function (unreliableValueInputTypes) {\n  unreliableValueInputTypes[\"number\"] = \"number\";\n})(unreliableValueInputTypes || (unreliableValueInputTypes = {}));\n\nfunction hasUnreliableEmptyValue(element) {\n  return (0, _isElementType.isElementType)(element, 'input') && Boolean(unreliableValueInputTypes[element.type]);\n}"]},"metadata":{},"sourceType":"script"}